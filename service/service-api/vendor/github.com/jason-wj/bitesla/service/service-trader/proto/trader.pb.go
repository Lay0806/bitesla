// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/trader.proto

package bitesla_srv_trader

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_STOP    Status = 0
	Status_START   Status = 1
	Status_PENDING Status = 2
	Status_SUCCESS Status = 3
	Status_ERROR   Status = 4
)

var Status_name = map[int32]string{
	0: "STOP",
	1: "START",
	2: "PENDING",
	3: "SUCCESS",
	4: "ERROR",
}

var Status_value = map[string]int32{
	"STOP":    0,
	"START":   1,
	"PENDING": 2,
	"SUCCESS": 3,
	"ERROR":   4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2edf40fce82c1271, []int{0}
}

type Language int32

const (
	Language_GOLANG Language = 0
	Language_PYTHON Language = 1
)

var Language_name = map[int32]string{
	0: "GOLANG",
	1: "PYTHON",
}

var Language_value = map[string]int32{
	"GOLANG": 0,
	"PYTHON": 1,
}

func (x Language) String() string {
	return proto.EnumName(Language_name, int32(x))
}

func (Language) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2edf40fce82c1271, []int{1}
}

type TraderInfo struct {
	CurrentLoginUserID   int64    `protobuf:"varint,1,opt,name=currentLoginUserID,proto3" json:"currentLoginUserID,omitempty"`
	ExchangeId           int64    `protobuf:"varint,2,opt,name=exchangeId,proto3" json:"exchangeId,omitempty"`
	StrategyId           int64    `protobuf:"varint,3,opt,name=strategyId,proto3" json:"strategyId,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime           int64    `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           int64    `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Page                 int32    `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	TraderId             int64    `protobuf:"varint,11,opt,name=traderId,proto3" json:"traderId,omitempty"`
	ApiKey               string   `protobuf:"bytes,13,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	ApiSecret            string   `protobuf:"bytes,14,opt,name=apiSecret,proto3" json:"apiSecret,omitempty"`
	Token                string   `protobuf:"bytes,15,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraderInfo) Reset()         { *m = TraderInfo{} }
func (m *TraderInfo) String() string { return proto.CompactTextString(m) }
func (*TraderInfo) ProtoMessage()    {}
func (*TraderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2edf40fce82c1271, []int{0}
}

func (m *TraderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraderInfo.Unmarshal(m, b)
}
func (m *TraderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraderInfo.Marshal(b, m, deterministic)
}
func (m *TraderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraderInfo.Merge(m, src)
}
func (m *TraderInfo) XXX_Size() int {
	return xxx_messageInfo_TraderInfo.Size(m)
}
func (m *TraderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TraderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TraderInfo proto.InternalMessageInfo

func (m *TraderInfo) GetCurrentLoginUserID() int64 {
	if m != nil {
		return m.CurrentLoginUserID
	}
	return 0
}

func (m *TraderInfo) GetExchangeId() int64 {
	if m != nil {
		return m.ExchangeId
	}
	return 0
}

func (m *TraderInfo) GetStrategyId() int64 {
	if m != nil {
		return m.StrategyId
	}
	return 0
}

func (m *TraderInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TraderInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TraderInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TraderInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TraderInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *TraderInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *TraderInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TraderInfo) GetTraderId() int64 {
	if m != nil {
		return m.TraderId
	}
	return 0
}

func (m *TraderInfo) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *TraderInfo) GetApiSecret() string {
	if m != nil {
		return m.ApiSecret
	}
	return ""
}

func (m *TraderInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type TraderInfos struct {
	TraderInfos          []*TraderInfo `protobuf:"bytes,1,rep,name=traderInfos,proto3" json:"traderInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TraderInfos) Reset()         { *m = TraderInfos{} }
func (m *TraderInfos) String() string { return proto.CompactTextString(m) }
func (*TraderInfos) ProtoMessage()    {}
func (*TraderInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_2edf40fce82c1271, []int{1}
}

func (m *TraderInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraderInfos.Unmarshal(m, b)
}
func (m *TraderInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraderInfos.Marshal(b, m, deterministic)
}
func (m *TraderInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraderInfos.Merge(m, src)
}
func (m *TraderInfos) XXX_Size() int {
	return xxx_messageInfo_TraderInfos.Size(m)
}
func (m *TraderInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_TraderInfos.DiscardUnknown(m)
}

var xxx_messageInfo_TraderInfos proto.InternalMessageInfo

func (m *TraderInfos) GetTraderInfos() []*TraderInfo {
	if m != nil {
		return m.TraderInfos
	}
	return nil
}

type StrategyInfo struct {
	CurrentLoginUserID   int64    `protobuf:"varint,1,opt,name=currentLoginUserID,proto3" json:"currentLoginUserID,omitempty"`
	StrategyId           int64    `protobuf:"varint,2,opt,name=strategyId,proto3" json:"strategyId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Script               string   `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	Page                 int32    `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime           int64    `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           int64    `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Language             int32    `protobuf:"varint,10,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrategyInfo) Reset()         { *m = StrategyInfo{} }
func (m *StrategyInfo) String() string { return proto.CompactTextString(m) }
func (*StrategyInfo) ProtoMessage()    {}
func (*StrategyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2edf40fce82c1271, []int{2}
}

func (m *StrategyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrategyInfo.Unmarshal(m, b)
}
func (m *StrategyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrategyInfo.Marshal(b, m, deterministic)
}
func (m *StrategyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrategyInfo.Merge(m, src)
}
func (m *StrategyInfo) XXX_Size() int {
	return xxx_messageInfo_StrategyInfo.Size(m)
}
func (m *StrategyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StrategyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StrategyInfo proto.InternalMessageInfo

func (m *StrategyInfo) GetCurrentLoginUserID() int64 {
	if m != nil {
		return m.CurrentLoginUserID
	}
	return 0
}

func (m *StrategyInfo) GetStrategyId() int64 {
	if m != nil {
		return m.StrategyId
	}
	return 0
}

func (m *StrategyInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StrategyInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StrategyInfo) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *StrategyInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *StrategyInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StrategyInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *StrategyInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *StrategyInfo) GetLanguage() int32 {
	if m != nil {
		return m.Language
	}
	return 0
}

func init() {
	proto.RegisterEnum("bitesla.srv.trader.Status", Status_name, Status_value)
	proto.RegisterEnum("bitesla.srv.trader.Language", Language_name, Language_value)
	proto.RegisterType((*TraderInfo)(nil), "bitesla.srv.trader.TraderInfo")
	proto.RegisterType((*TraderInfos)(nil), "bitesla.srv.trader.TraderInfos")
	proto.RegisterType((*StrategyInfo)(nil), "bitesla.srv.trader.StrategyInfo")
}

func init() { proto.RegisterFile("proto/trader.proto", fileDescriptor_2edf40fce82c1271) }

var fileDescriptor_2edf40fce82c1271 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xd1, 0x8e, 0x93, 0x40,
	0x14, 0x86, 0x4b, 0x69, 0x59, 0x38, 0xac, 0x2e, 0x99, 0x18, 0x33, 0x69, 0xcc, 0xda, 0x70, 0xd5,
	0xec, 0x05, 0x26, 0xeb, 0x0b, 0xb8, 0x6e, 0x9b, 0x4a, 0xac, 0x85, 0x00, 0x7b, 0xe1, 0xe5, 0x2c,
	0x1c, 0xbb, 0xc4, 0x2e, 0x10, 0x98, 0xaa, 0xeb, 0xa3, 0x78, 0xe7, 0x1b, 0xf8, 0x88, 0x66, 0x06,
	0xb6, 0xa0, 0x5d, 0xad, 0x31, 0xbd, 0x3b, 0xff, 0xff, 0xcf, 0x9c, 0x73, 0x32, 0x1f, 0x01, 0x48,
	0x51, 0xe6, 0x3c, 0x7f, 0xc1, 0x4b, 0x96, 0x60, 0xe9, 0x48, 0x41, 0xc8, 0x75, 0xca, 0xb1, 0x5a,
	0x33, 0xa7, 0x2a, 0x3f, 0x39, 0x75, 0x62, 0x7f, 0x53, 0x01, 0x22, 0x59, 0xba, 0xd9, 0x87, 0x9c,
	0x38, 0x40, 0xe2, 0x4d, 0x59, 0x62, 0xc6, 0x17, 0xf9, 0x2a, 0xcd, 0xae, 0x2a, 0x2c, 0xdd, 0x29,
	0x55, 0xc6, 0xca, 0x44, 0x0d, 0x1e, 0x48, 0xc8, 0x29, 0x00, 0x7e, 0x89, 0x6f, 0x58, 0xb6, 0x42,
	0x37, 0xa1, 0x7d, 0x79, 0xae, 0xe3, 0x88, 0xbc, 0xe2, 0x25, 0xe3, 0xb8, 0xba, 0x73, 0x13, 0xaa,
	0xd6, 0x79, 0xeb, 0x10, 0x02, 0x83, 0x8c, 0xdd, 0x22, 0x1d, 0x8c, 0x95, 0x89, 0x11, 0xc8, 0x9a,
	0x3c, 0x05, 0xad, 0xe2, 0x8c, 0x6f, 0x2a, 0x3a, 0x1c, 0x2b, 0x93, 0x61, 0xd0, 0x28, 0x32, 0x06,
	0x33, 0xc1, 0x2a, 0x2e, 0xd3, 0x82, 0xa7, 0x79, 0x46, 0x35, 0x79, 0xa5, 0x6b, 0x89, 0x69, 0x71,
	0x89, 0x8c, 0x63, 0x94, 0xde, 0x22, 0x3d, 0xaa, 0xa7, 0xb5, 0x8e, 0xc8, 0x37, 0x45, 0x72, 0x9f,
	0xeb, 0x75, 0xde, 0x3a, 0x62, 0x9b, 0x82, 0xad, 0x90, 0x1a, 0x72, 0xae, 0xac, 0x85, 0x57, 0xa5,
	0x5f, 0x91, 0x42, 0xed, 0x89, 0x9a, 0x8c, 0x40, 0xaf, 0x9f, 0xcf, 0x4d, 0xa8, 0x29, 0xbb, 0x6c,
	0xb5, 0xd8, 0x9e, 0x15, 0xe9, 0x5b, 0xbc, 0xa3, 0x8f, 0xe4, 0x82, 0x8d, 0x22, 0xcf, 0xc0, 0x60,
	0x45, 0x1a, 0x62, 0x5c, 0x22, 0xa7, 0x8f, 0x65, 0xd4, 0x1a, 0xe4, 0x09, 0x0c, 0x79, 0xfe, 0x11,
	0x33, 0x7a, 0x22, 0x93, 0x5a, 0xd8, 0x1e, 0x98, 0x2d, 0x9b, 0x8a, 0xbc, 0x02, 0x93, 0xb7, 0x92,
	0x2a, 0x63, 0x75, 0x62, 0x9e, 0x9f, 0x3a, 0xbb, 0x54, 0x9d, 0xf6, 0x56, 0xd0, 0xbd, 0x62, 0xff,
	0xe8, 0xc3, 0x71, 0x78, 0xff, 0xfa, 0xff, 0xc9, 0xbb, 0xc3, 0xb3, 0xff, 0x47, 0x9e, 0x6a, 0x87,
	0xe7, 0x6f, 0xdc, 0x06, 0xbb, 0xdc, 0x04, 0x71, 0x29, 0x24, 0x71, 0x23, 0x68, 0xd4, 0x96, 0x87,
	0xf6, 0x00, 0x8f, 0xa3, 0x0e, 0x8f, 0x5f, 0xb9, 0xeb, 0x7b, 0xb8, 0x1b, 0x3b, 0xdc, 0x47, 0xa0,
	0xaf, 0x59, 0xb6, 0xda, 0x88, 0x59, 0x35, 0xe7, 0xad, 0x3e, 0x7b, 0x0d, 0x5a, 0x58, 0x7f, 0x7f,
	0x3a, 0x0c, 0xc2, 0xc8, 0xf3, 0xad, 0x1e, 0x31, 0x60, 0x18, 0x46, 0x17, 0x41, 0x64, 0x29, 0xc4,
	0x84, 0x23, 0x7f, 0xb6, 0x9c, 0xba, 0xcb, 0xb9, 0xd5, 0x17, 0x22, 0xbc, 0xba, 0xbc, 0x9c, 0x85,
	0xa1, 0xa5, 0x8a, 0x43, 0xb3, 0x20, 0xf0, 0x02, 0x6b, 0x70, 0x66, 0x83, 0xbe, 0x68, 0xfa, 0x11,
	0x00, 0x6d, 0xee, 0x2d, 0x2e, 0x96, 0x73, 0xab, 0x27, 0x6a, 0xff, 0x7d, 0xf4, 0xc6, 0x5b, 0x5a,
	0xca, 0xf9, 0x77, 0x15, 0xb4, 0x1a, 0x1b, 0xf1, 0x00, 0x16, 0x69, 0xc5, 0x1b, 0xb5, 0x07, 0xf0,
	0xe8, 0xf9, 0xdf, 0xf3, 0xca, 0xee, 0x91, 0x77, 0x60, 0xf8, 0x9b, 0x7f, 0xed, 0xb7, 0x27, 0xb7,
	0x7b, 0x24, 0x84, 0x93, 0x39, 0x36, 0xed, 0xa6, 0xc8, 0x59, 0xba, 0x3e, 0x40, 0x53, 0x1f, 0x8e,
	0xa7, 0xb8, 0x46, 0x8e, 0x07, 0x5b, 0xd3, 0x87, 0xe3, 0xf0, 0x73, 0xca, 0xe3, 0x9b, 0x43, 0x75,
	0xbc, 0xd6, 0xe4, 0x7f, 0xf4, 0xe5, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xe9, 0xa8, 0x28,
	0x5d, 0x05, 0x00, 0x00,
}
